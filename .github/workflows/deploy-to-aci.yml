name: Deploy to ACI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PAT }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Retrieve secrets from Azure Key Vault using Azure CLI
      run: |
        BACKEND_PORT=$(az keyvault secret show --name backendport --vault-name laserantskeyvaul --query value -o tsv)
        POSTGRES_USER=$(az keyvault secret show --name postgresuser --vault-name laserantskeyvaul --query value -o tsv)
        POSTGRES_PASSWORD=$(az keyvault secret show --name postgrespassword --vault-name laserantskeyvaul --query value -o tsv)
        POSTGRES_DB=$(az keyvault secret show --name postgresdb --vault-name laserantskeyvaul --query value -o tsv)
        POSTGRES_HOST=$(az keyvault secret show --name postgreshost --vault-name laserantskeyvaul --query value -o tsv)
        POSTGRES_PORT=$(az keyvault secret show --name postgresport --vault-name laserantskeyvaul --query value -o tsv)
        EXEC_MODE=$(az keyvault secret show --name execmode --vault-name laserantskeyvaul --query value -o tsv)
        SEED_DEVELOPMENT=$(az keyvault secret show --name seeddevelopment --vault-name laserantskeyvaul --query value -o tsv)
        SEED_PRODUCTION=$(az keyvault secret show --name seedproduction --vault-name laserantskeyvaul --query value -o tsv)
        FRONTEND_ORIGINS=$(az keyvault secret show --name frontendorigins --vault-name laserantskeyvaul --query value -o tsv)
        POSTGRES_DB_DEV_URL=$(az keyvault secret show --name postgresdbdevurl --vault-name laserantskeyvaul --query value -o tsv)
        DATABASE_URL=$(az keyvault secret show --name databaseurl --vault-name laserantskeyvaul --query value -o tsv)
        VITE_BACKEND_URL=$(az keyvault secret show --name vitebackendurl --vault-name laserantskeyvaul --query value -o tsv)
        VITE_APP_NAME=$(az keyvault secret show --name viteappname --vault-name laserantskeyvaul --query value -o tsv)
        echo "BACKEND_PORT=$BACKEND_PORT" >> $GITHUB_ENV
        echo "POSTGRES_USER=$POSTGRES_USER" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> $GITHUB_ENV
        echo "POSTGRES_DB=$POSTGRES_DB" >> $GITHUB_ENV
        echo "POSTGRES_HOST=$POSTGRES_HOST" >> $GITHUB_ENV
        echo "POSTGRES_PORT=$POSTGRES_PORT" >> $GITHUB_ENV
        echo "EXEC_MODE=$EXEC_MODE" >> $GITHUB_ENV
        echo "SEED_DEVELOPMENT=$SEED_DEVELOPMENT" >> $GITHUB_ENV
        echo "SEED_PRODUCTION=$SEED_PRODUCTION" >> $GITHUB_ENV
        echo "FRONTEND_ORIGINS=$FRONTEND_ORIGINS" >> $GITHUB_ENV
        echo "POSTGRES_DB_DEV_URL=$POSTGRES_DB_DEV_URL" >> $GITHUB_ENV
        echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
        echo "VITE_BACKEND_URL=$VITE_BACKEND_URL" >> $GITHUB_ENV
        echo "VITE_APP_NAME=$VITE_APP_NAME" >> $GITHUB_ENV

    - name: Deploy ecommerce_monorepo to ACI
      run: |
        az container create \
          --resource-group laserantsgroup \
          --name ecommerce-monorepo \
          --image hftamayo/ecommerce_monorepo:0.0.1 \
          --cpu 1 \
          --memory 1 \
          --ports 5173 8012 \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKER_HUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKER_HUB_PAT }} \
          --vnet laserantsvnet \
          --subnet lasersubnet \
          --ip-address Private \
          --environment-variables \
            BACKEND_PORT=$BACKEND_PORT \
            POSTGRES_USER=$POSTGRES_USER \
            POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            POSTGRES_DB=$POSTGRES_DB \
            POSTGRES_HOST=$POSTGRES_HOST \
            POSTGRES_PORT=$POSTGRES_PORT \
            EXEC_MODE=$EXEC_MODE \
            SEED_DEVELOPMENT=$SEED_DEVELOPMENT \
            SEED_PRODUCTION=$SEED_PRODUCTION \
            FRONTEND_ORIGINS=$FRONTEND_ORIGINS \
            POSTGRES_DB_DEV_URL=$POSTGRES_DB_DEV_URL \
            DATABASE_URL=$DATABASE_URL \
            VITE_BACKEND_URL=$VITE_BACKEND_URL \
            VITE_APP_NAME=$VITE_APP_NAME

    - name: Deploy pgecommerce to ACI
      run: |
        az container create \
          --resource-group laserantsgroup \
          --name pgecommerce \
          --image hftamayo/pgecommerce:0.0.1 \
          --cpu 1 \
          --memory 1 \
          --ports 5432 \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKER_HUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKER_HUB_PAT }} \
          --vnet laserantsvnet \
          --subnet lasersubnet \
          --ip-address Private \
          --environment-variables \
            POSTGRES_USER=$POSTGRES_USER \
            POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
            POSTGRES_DB=$POSTGRES_DB \
            POSTGRES_HOST=$POSTGRES_HOST \
            POSTGRES_PORT=$POSTGRES_PORT \
            EXEC_MODE=$EXEC_MODE \
            DATABASE_URL=$DATABASE_URL

    - name: Create public IP for Application Gateway
      run: |
        az network public-ip create --resource-group laserantsgroup --name appGatewayPublicIp --sku Standard --allocation-method Static

    - name: Create Application Gateway
      run: |
        az network application-gateway create \
          --resource-group laserantsgroup \
          --name appGateway \
          --location westus \
          --sku Standard_v2 \
          --capacity 2 \
          --vnet-name laserantsvnet \
          --subnet appGatewaySubnet \
          --public-ip-address appGatewayPublicIp \
          --frontend-port 80 \
          --http-settings-port 5173 \
          --http-settings-protocol Http \
          --routing-rule-type Basic \
          --priority 1 \
          --servers $(az container show --resource-group laserantsgroup --name ecommerce-monorepo --query ipAddress.ip --output tsv)

    - name: Create custom health probe
      run: |
        az network application-gateway probe create \
          --resource-group laserantsgroup \
          --gateway-name appGateway \
          --name customHealthProbe \
          --protocol Http \
          --host-name-from-http-settings true \
          --path / \
          --interval 30 \
          --timeout 30 \
          --unhealthy-threshold 3

    - name: Update HTTP settings with custom health probe
      run: |
        az network application-gateway http-settings update \
          --resource-group laserantsgroup \
          --gateway-name appGateway \
          --name appGatewayBackendHttpSettings \
          --probe customHealthProbe

    - name: Get public IP address of Application Gateway
      run: |
        APP_GATEWAY_IP=$(az network public-ip show --resource-group laserantsgroup --name appGatewayPublicIp --query ipAddress --output tsv)
        echo "ecommerce-monorepo is accessible at http://$APP_GATEWAY_IP"
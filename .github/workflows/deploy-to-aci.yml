name: Deploy to ACI

on:
  push:
    branches:
      - unstable

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PAT }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure virtual network and subnet exist
      run: |
        if ! az network vnet show --resource-group laserantsgroup --name laserantsvnet; then
          az network vnet create --resource-group laserantsgroup --name laserantsvnet --address-prefix 10.0.0.0/16 --subnet-name lasersubnet --subnet-prefix 10.0.0.0/24
        fi

    - name: Ensure network security group exists
      run: |
        if ! az network nsg show --resource-group laserantsgroup --name laserantsnsg; then
          az network nsg create --resource-group laserantsgroup --name laserantsnsg --location westus
        fi

    - name: Ensure NSG rules allow internal communication
      run: |
        az network nsg rule create --resource-group laserantsgroup --nsg-name laserantsnsg --name AllowInternal --priority 100 --direction Inbound --access Allow --protocol Tcp --source-address-prefixes 10.0.0.0/16 --source-port-ranges '*' --destination-address-prefixes 10.0.0.0/16 --destination-port-ranges '*'

    - name: Associate NSG with subnet
      run: |
        az network vnet subnet update --resource-group laserantsgroup --vnet-name laserantsvnet --name lasersubnet --network-security-group laserantsnsg

    - name: Delete existing ecommerce-monorepo container group
      run: |
        if az container show --resource-group laserantsgroup --name ecommerce-monorepo; then
          az container delete --resource-group laserantsgroup --name ecommerce-monorepo --yes
        fi

    - name: Delete existing pgecommerce container group
      run: |
        if az container show --resource-group laserantsgroup --name pgecommerce; then
          az container delete --resource-group laserantsgroup --name pgecommerce --yes
        fi

    - name: Deploy ecommerce_monorepo to ACI
      run: |
        az container create \
          --resource-group laserantsgroup \
          --name ecommerce-monorepo \
          --image hftamayo/ecommerce_monorepo:0.0.1 \
          --cpu 1 \
          --memory 1 \
          --ports 5173 8012 \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKER_HUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKER_HUB_PAT }} \
          --vnet laserantsvnet \
          --subnet lasersubnet \
          --ip-address Private \
          --environment-variables \
            DATABASE_URL=${{ secrets.DATABASE_URL }}

    - name: Deploy pgecommerce to ACI
      run: |
        az container create \
          --resource-group laserantsgroup \
          --name pgecommerce \
          --image hftamayo/pgecommerce:0.0.1 \
          --cpu 1 \
          --memory 1 \
          --ports 5432 \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKER_HUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKER_HUB_PAT }} \
          --vnet laserantsvnet \
          --subnet lasersubnet \
          --ip-address Private \
          --environment-variables \
            POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}

    - name: Create public IP for Application Gateway
      run: |
        az network public-ip create --resource-group laserantsgroup --name appGatewayPublicIp --sku Standard --allocation-method Static

    - name: Create Application Gateway
      run: |
        az network application-gateway create \
          --resource-group laserantsgroup \
          --name appGateway \
          --location westus \
          --sku Standard_v2 \
          --capacity 2 \
          --vnet-name laserantsvnet \
          --subnet lasersubnet \
          --public-ip-address appGatewayPublicIp \
          --frontend-port 80 \
          --http-settings-port 5173 \
          --http-settings-protocol Http \
          --routing-rule-type Basic \
          --servers $(az container show --resource-group laserantsgroup --name ecommerce-monorepo --query ipAddress.ip --output tsv)

    - name: Get public IP address of Application Gateway
      run: |
        APP_GATEWAY_IP=$(az network public-ip show --resource-group laserantsgroup --name appGatewayPublicIp --query ipAddress --output tsv)
        echo "ecommerce-monorepo is accessible at http://$APP_GATEWAY_IP"
name: Deploy to ACI

on:
  push:
    branches:
      - unstable

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PAT }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Retrieve secrets from Azure Key Vault
      id: keyvault
      uses: azure/keyvault-secrets@v1
      with:
        keyvault: laserantskeyvaul
        secrets: |
          backendport
          postgresuser
          postgrespassword
          postgresdb
          postgreshost
          postgresport
          execmode
          seeddevelopment
          seedproduction
          frontendorigins
          postgresdbdevurl
          databaseurl
          vitebackendurl
          viteappname

    - name: Deploy pgecommerce to ACI
      run: |
        az container create \
          --resource-group laserantsgroup \
          --name pgecommerce \
          --image hftamayo/pgecommerce:0.0.1 \
          --cpu 1 \
          --memory 1 \
          --ports 5432 \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKER_HUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKER_HUB_PAT }} \
          --vnet laserantsvnet \
          --subnet lasersubnet \
          --ip-address Private \
          --environment-variables \
            POSTGRES_USER=${{ steps.keyvault.outputs.postgresuser }} \
            POSTGRES_PASSWORD=${{ steps.keyvault.outputs.postgrespassword }} \
            POSTGRES_DB=${{ steps.keyvault.outputs.postgresdb }} \
            POSTGRES_HOST=${{ steps.keyvault.outputs.postgreshost }} \
            POSTGRES_PORT=${{ steps.keyvault.outputs.postgresport }} \
            EXEC_MODE=${{ steps.keyvault.outputs.execmode }} \
            DATABASE_URL=${{ steps.keyvault.outputs.databaseurl }}

    - name: Deploy ecommerce_monorepo to ACI
      run: |
        az container create \
          --resource-group laserantsgroup \
          --name ecommerce-monorepo \
          --image hftamayo/ecommerce_monorepo:0.0.1 \
          --cpu 1 \
          --memory 1 \
          --ports 5173 8012 \
          --registry-login-server index.docker.io \
          --registry-username ${{ secrets.DOCKER_HUB_USERNAME }} \
          --registry-password ${{ secrets.DOCKER_HUB_PAT }} \
          --vnet laserantsvnet \
          --subnet lasersubnet \
          --ip-address Private \
          --environment-variables \
            BACKEND_PORT=${{ steps.keyvault.outputs.backendport }} \
            POSTGRES_USER=${{ steps.keyvault.outputs.postgresuser }} \
            POSTGRES_PASSWORD=${{ steps.keyvault.outputs.postgrespassword }} \
            POSTGRES_DB=${{ steps.keyvault.outputs.postgresdb }} \
            POSTGRES_HOST=${{ steps.keyvault.outputs.postgreshost }} \
            POSTGRES_PORT=${{ steps.keyvault.outputs.postgresport }} \
            EXEC_MODE=${{ steps.keyvault.outputs.execmode }} \
            SEED_DEVELOPMENT=${{ steps.keyvault.outputs.seeddevelopment }} \
            SEED_PRODUCTION=${{ steps.keyvault.outputs.seedproduction }} \
            FRONTEND_ORIGINS=${{ steps.keyvault.outputs.frontendorigins }} \
            POSTGRES_DB_DEV_URL=${{ steps.keyvault.outputs.postgresdbdevurl }} \
            DATABASE_URL=${{ steps.keyvault.outputs.databaseurl }} \
            VITE_BACKEND_URL=${{ steps.keyvault.outputs.vitebackendurl }} \
            VITE_APP_NAME=${{ steps.keyvault.outputs.viteappname }}

    - name: Create public IP for Application Gateway
      run: |
        az network public-ip create --resource-group laserantsgroup --name appGatewayPublicIp --sku Standard --allocation-method Static

    - name: Create Application Gateway
      run: |
        az network application-gateway create \
          --resource-group laserantsgroup \
          --name appGateway \
          --location westus \
          --sku Standard_v2 \
          --capacity 2 \
          --vnet-name laserantsvnet \
          --subnet appGatewaySubnet \
          --public-ip-address appGatewayPublicIp \
          --frontend-port 80 \
          --http-settings-port 5173 \
          --http-settings-protocol Http \
          --routing-rule-type Basic \
          --priority 1 \
          --servers $(az container show --resource-group laserantsgroup --name ecommerce-monorepo --query ipAddress.ip --output tsv)

    - name: Create custom health probe
      run: |
        az network application-gateway probe create \
          --resource-group laserantsgroup \
          --gateway-name appGateway \
          --name customHealthProbe \
          --protocol Http \
          --host-name-from-http-settings true \
          --path / \
          --interval 30 \
          --timeout 30 \
          --unhealthy-threshold 3

    - name: Update HTTP settings with custom health probe
      run: |
        az network application-gateway http-settings update \
          --resource-group laserantsgroup \
          --gateway-name appGateway \
          --name appGatewayBackendHttpSettings \
          --probe customHealthProbe

    - name: Get public IP address of Application Gateway
      run: |
        APP_GATEWAY_IP=$(az network public-ip show --resource-group laserantsgroup --name appGatewayPublicIp --query ipAddress --output tsv)
        echo "ecommerce-monorepo is accessible at http://$APP_GATEWAY_IP"